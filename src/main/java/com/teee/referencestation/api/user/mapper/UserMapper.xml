<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
    <select id="findUserByUsername" resultType="user" parameterType="string">
        SELECT id,
                username,
                password,
                salt,
                real_name,
                cell_phone_number,
                email,
                state,
                last_modified_date
        FROM sys_user
        where binary username = #{username} and deleted = 0
    </select>

    <select id="getDataList" resultType="map" parameterType="map">
        SELECT id,
                username,
                real_name,
                cell_phone_number,
                email,
                state,
                created_by,
                created_date,
                last_modified_by,
                last_modified_date
        FROM sys_user
        <where>
            <if test="id != null and id != '' and id != 0">
                id = #{id}
            </if>
            <if test="username != null and username != ''">
                and binary username = #{username}
            </if>
            <if test="realName != null and realName != ''">
                and binary real_name like CONCAT('%',#{realName},'%')
            </if>
            <if test="cellPhoneNumber != null and cellPhoneNumber != ''">
                and cell_phone_number = #{cellPhoneNumber}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="state != null and state != 0">
                and state = #{state}
            </if>
            and deleted = 0
        </where>
    </select>

    <insert id="insertUser" parameterType="user">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="cellPhoneNumber != null">
                cell_phone_number,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="lastModifiedBy != null">
                last_modified_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password, jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName, jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt, jdbcType=VARCHAR},
            </if>
            <if test="cellPhoneNumber != null">
                #{cellPhoneNumber, jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email, jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state, jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                #{deleted, jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy, jdbcType=INTEGER},
            </if>
            <if test="lastModifiedBy != null">
                #{lastModifiedBy, jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="findUserById" resultType="user" parameterType="long">
        SELECT id,
                username,
                password,
                salt,
                real_name,
                cell_phone_number,
                email,
                state,
                duty,
                last_modified_date
        FROM sys_user
        where id = #{id}
    </select>

    <update id="updateUser" parameterType="user">
        update sys_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="cellPhoneNumber != null">cell_phone_number = #{cellPhoneNumber},</if>
            <if test="email != null">email = #{email},</if>
            <if test="lastModifiedBy != null">last_modified_by = #{lastModifiedBy},</if>
            <if test="state != null">state = #{state},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="password != null">password = #{password},</if>
        </set>
        where id = #{id}
    </update>

    <update id="deleteUserBatch" parameterType="map">
        update sys_user
        set deleted = 9
        where id in
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectByIdList" parameterType="list" resultType="user">
        select id,
                cell_phone_number,
                email
        from sys_user
        where id in
        <foreach collection="list" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>
