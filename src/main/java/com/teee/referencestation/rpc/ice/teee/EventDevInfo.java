// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.1
//
// <auto-generated>
//
// Generated from file `TEEEEventInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.teee.referencestation.rpc.ice.teee;

public class EventDevInfo implements Cloneable,
                                     java.io.Serializable
{
    public long dev_id;

    public long getDev_id()
    {
        return dev_id;
    }

    public void setDev_id(long dev_id)
    {
        this.dev_id = dev_id;
    }

    public long dev_sno;

    public long getDev_sno()
    {
        return dev_sno;
    }

    public void setDev_sno(long dev_sno)
    {
        this.dev_sno = dev_sno;
    }

    public long bd_sno;

    public long getBd_sno()
    {
        return bd_sno;
    }

    public void setBd_sno(long bd_sno)
    {
        this.bd_sno = bd_sno;
    }

    public long bd_type;

    public long getBd_type()
    {
        return bd_type;
    }

    public void setBd_type(long bd_type)
    {
        this.bd_type = bd_type;
    }

    public long bd_slot_id;

    public long getBd_slot_id()
    {
        return bd_slot_id;
    }

    public void setBd_slot_id(long bd_slot_id)
    {
        this.bd_slot_id = bd_slot_id;
    }

    public long locomotive_id;

    public long getLocomotive_id()
    {
        return locomotive_id;
    }

    public void setLocomotive_id(long locomotive_id)
    {
        this.locomotive_id = locomotive_id;
    }

    public long locomotive_sno;

    public long getLocomotive_sno()
    {
        return locomotive_sno;
    }

    public void setLocomotive_sno(long locomotive_sno)
    {
        this.locomotive_sno = locomotive_sno;
    }

    public EventDevInfo()
    {
        this.dev_id = 0L;
        this.dev_sno = 0L;
        this.bd_sno = 0L;
        this.bd_type = 0L;
        this.bd_slot_id = 0L;
        this.locomotive_id = 0L;
        this.locomotive_sno = 0L;
    }

    public EventDevInfo(long dev_id, long dev_sno, long bd_sno, long bd_type, long bd_slot_id, long locomotive_id, long locomotive_sno)
    {
        this.dev_id = dev_id;
        this.dev_sno = dev_sno;
        this.bd_sno = bd_sno;
        this.bd_type = bd_type;
        this.bd_slot_id = bd_slot_id;
        this.locomotive_id = locomotive_id;
        this.locomotive_sno = locomotive_sno;
    }

    public boolean equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        EventDevInfo r = null;
        if(rhs instanceof EventDevInfo)
        {
            r = (EventDevInfo)rhs;
        }

        if(r != null)
        {
            if(this.dev_id != r.dev_id)
            {
                return false;
            }
            if(this.dev_sno != r.dev_sno)
            {
                return false;
            }
            if(this.bd_sno != r.bd_sno)
            {
                return false;
            }
            if(this.bd_type != r.bd_type)
            {
                return false;
            }
            if(this.bd_slot_id != r.bd_slot_id)
            {
                return false;
            }
            if(this.locomotive_id != r.locomotive_id)
            {
                return false;
            }
            if(this.locomotive_sno != r.locomotive_sno)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::teee::EventDevInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, dev_id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, dev_sno);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, bd_sno);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, bd_type);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, bd_slot_id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, locomotive_id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, locomotive_sno);
        return h_;
    }

    public EventDevInfo clone()
    {
        EventDevInfo c = null;
        try
        {
            c = (EventDevInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeLong(this.dev_id);
        ostr.writeLong(this.dev_sno);
        ostr.writeLong(this.bd_sno);
        ostr.writeLong(this.bd_type);
        ostr.writeLong(this.bd_slot_id);
        ostr.writeLong(this.locomotive_id);
        ostr.writeLong(this.locomotive_sno);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.dev_id = istr.readLong();
        this.dev_sno = istr.readLong();
        this.bd_sno = istr.readLong();
        this.bd_type = istr.readLong();
        this.bd_slot_id = istr.readLong();
        this.locomotive_id = istr.readLong();
        this.locomotive_sno = istr.readLong();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, EventDevInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public EventDevInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        EventDevInfo v = new EventDevInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<EventDevInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, EventDevInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.VSize))
        {
            ostr.writeSize(56);
            ice_write(ostr, v);
        }
    }

    static public java.util.Optional<EventDevInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.VSize))
        {
            istr.skipSize();
            return java.util.Optional.of(EventDevInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final EventDevInfo _nullMarshalValue = new EventDevInfo();

    public static final long serialVersionUID = -534113491L;
}
