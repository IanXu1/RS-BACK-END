// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.1
//
// <auto-generated>
//
// Generated from file `TEEEEventInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.teee.referencestation.rpc.ice.teee;

public class EventInfo implements Cloneable,
                                  java.io.Serializable
{
    public long eventinfo_id;

    public long getEventinfo_id()
    {
        return eventinfo_id;
    }

    public void setEventinfo_id(long eventinfo_id)
    {
        this.eventinfo_id = eventinfo_id;
    }

    public E_EVENT_LVL event_lvl;

    public E_EVENT_LVL getEvent_lvl()
    {
        return event_lvl;
    }

    public void setEvent_lvl(E_EVENT_LVL event_lvl)
    {
        this.event_lvl = event_lvl;
    }

    public long event_type;

    public long getEvent_type()
    {
        return event_type;
    }

    public void setEvent_type(long event_type)
    {
        this.event_type = event_type;
    }

    public EventDevInfo eventDevInfo;

    public EventDevInfo getEventDevInfo()
    {
        return eventDevInfo;
    }

    public void setEventDevInfo(EventDevInfo eventDevInfo)
    {
        this.eventDevInfo = eventDevInfo;
    }

    public String occured_sno;

    public String getOccured_sno()
    {
        return occured_sno;
    }

    public void setOccured_sno(String occured_sno)
    {
        this.occured_sno = occured_sno;
    }

    public long occured_recv_time_ts;

    public long getOccured_recv_time_ts()
    {
        return occured_recv_time_ts;
    }

    public void setOccured_recv_time_ts(long occured_recv_time_ts)
    {
        this.occured_recv_time_ts = occured_recv_time_ts;
    }

    public long occured_time_ts;

    public long getOccured_time_ts()
    {
        return occured_time_ts;
    }

    public void setOccured_time_ts(long occured_time_ts)
    {
        this.occured_time_ts = occured_time_ts;
    }

    public EventContent eventContent;

    public EventContent getEventContent()
    {
        return eventContent;
    }

    public void setEventContent(EventContent eventContent)
    {
        this.eventContent = eventContent;
    }

    public boolean is_deleted;

    public boolean getIs_deleted()
    {
        return is_deleted;
    }

    public void setIs_deleted(boolean is_deleted)
    {
        this.is_deleted = is_deleted;
    }

    public boolean isIs_deleted()
    {
        return is_deleted;
    }

    public EventInfo()
    {
        this.eventinfo_id = 0L;
        this.event_lvl = E_EVENT_LVL.E_EVENT_LVL_INFO;
        this.event_type = 0L;
        this.eventDevInfo = new EventDevInfo();
        this.occured_sno = "0";
        this.occured_recv_time_ts = 0L;
        this.occured_time_ts = 0L;
        this.eventContent = new EventContent();
        this.is_deleted = false;
    }

    public EventInfo(long eventinfo_id, E_EVENT_LVL event_lvl, long event_type, EventDevInfo eventDevInfo, String occured_sno, long occured_recv_time_ts, long occured_time_ts, EventContent eventContent, boolean is_deleted)
    {
        this.eventinfo_id = eventinfo_id;
        this.event_lvl = event_lvl;
        this.event_type = event_type;
        this.eventDevInfo = eventDevInfo;
        this.occured_sno = occured_sno;
        this.occured_recv_time_ts = occured_recv_time_ts;
        this.occured_time_ts = occured_time_ts;
        this.eventContent = eventContent;
        this.is_deleted = is_deleted;
    }

    public boolean equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        EventInfo r = null;
        if(rhs instanceof EventInfo)
        {
            r = (EventInfo)rhs;
        }

        if(r != null)
        {
            if(this.eventinfo_id != r.eventinfo_id)
            {
                return false;
            }
            if(this.event_lvl != r.event_lvl)
            {
                if(this.event_lvl == null || r.event_lvl == null || !this.event_lvl.equals(r.event_lvl))
                {
                    return false;
                }
            }
            if(this.event_type != r.event_type)
            {
                return false;
            }
            if(this.eventDevInfo != r.eventDevInfo)
            {
                if(this.eventDevInfo == null || r.eventDevInfo == null || !this.eventDevInfo.equals(r.eventDevInfo))
                {
                    return false;
                }
            }
            if(this.occured_sno != r.occured_sno)
            {
                if(this.occured_sno == null || r.occured_sno == null || !this.occured_sno.equals(r.occured_sno))
                {
                    return false;
                }
            }
            if(this.occured_recv_time_ts != r.occured_recv_time_ts)
            {
                return false;
            }
            if(this.occured_time_ts != r.occured_time_ts)
            {
                return false;
            }
            if(this.eventContent != r.eventContent)
            {
                if(this.eventContent == null || r.eventContent == null || !this.eventContent.equals(r.eventContent))
                {
                    return false;
                }
            }
            if(this.is_deleted != r.is_deleted)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::teee::EventInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, eventinfo_id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, event_lvl);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, event_type);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, eventDevInfo);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, occured_sno);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, occured_recv_time_ts);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, occured_time_ts);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, eventContent);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, is_deleted);
        return h_;
    }

    public EventInfo clone()
    {
        EventInfo c = null;
        try
        {
            c = (EventInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeLong(this.eventinfo_id);
        E_EVENT_LVL.ice_write(ostr, this.event_lvl);
        ostr.writeLong(this.event_type);
        EventDevInfo.ice_write(ostr, this.eventDevInfo);
        ostr.writeString(this.occured_sno);
        ostr.writeLong(this.occured_recv_time_ts);
        ostr.writeLong(this.occured_time_ts);
        EventContent.ice_write(ostr, this.eventContent);
        ostr.writeBool(this.is_deleted);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.eventinfo_id = istr.readLong();
        this.event_lvl = E_EVENT_LVL.ice_read(istr);
        this.event_type = istr.readLong();
        this.eventDevInfo = EventDevInfo.ice_read(istr);
        this.occured_sno = istr.readString();
        this.occured_recv_time_ts = istr.readLong();
        this.occured_time_ts = istr.readLong();
        this.eventContent = EventContent.ice_read(istr);
        this.is_deleted = istr.readBool();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, EventInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public EventInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        EventInfo v = new EventInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<EventInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, EventInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<EventInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(EventInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final EventInfo _nullMarshalValue = new EventInfo();

    public static final long serialVersionUID = 446468880L;
}
