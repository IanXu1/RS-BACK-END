// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.1
//
// <auto-generated>
//
// Generated from file `TEEEBaseStationInfo.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.teee.referencestation.rpc.ice.teee;

public class BaseStationInfo implements Cloneable,
                                        java.io.Serializable
{
    public long baseStationInfoId;

    public long getBaseStationInfoId()
    {
        return baseStationInfoId;
    }

    public void setBaseStationInfoId(long baseStationInfoId)
    {
        this.baseStationInfoId = baseStationInfoId;
    }

    public String username;

    public String getUsername()
    {
        return username;
    }

    public void setUsername(String username)
    {
        this.username = username;
    }

    public String password;

    public String getPassword()
    {
        return password;
    }

    public void setPassword(String password)
    {
        this.password = password;
    }

    public ExpiryCtlInfo expiryCtlInfo;

    public ExpiryCtlInfo getExpiryCtlInfo()
    {
        return expiryCtlInfo;
    }

    public void setExpiryCtlInfo(ExpiryCtlInfo expiryCtlInfo)
    {
        this.expiryCtlInfo = expiryCtlInfo;
    }

    public String name;

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public String namePlate;

    public String getNamePlate()
    {
        return namePlate;
    }

    public void setNamePlate(String namePlate)
    {
        this.namePlate = namePlate;
    }

    public Position position;

    public Position getPosition()
    {
        return position;
    }

    public void setPosition(Position position)
    {
        this.position = position;
    }

    public Position[] range;

    public Position[] getRange()
    {
        return range;
    }

    public void setRange(Position[] range)
    {
        this.range = range;
    }

    public Position getRange(int index)
    {
        return this.range[index];
    }

    public void setRange(int index, Position val)
    {
        this.range[index] = val;
    }

    public AuditingInfo auditingInfo;

    public AuditingInfo getAuditingInfo()
    {
        return auditingInfo;
    }

    public void setAuditingInfo(AuditingInfo auditingInfo)
    {
        this.auditingInfo = auditingInfo;
    }

    public BaseStationInfo()
    {
        this.baseStationInfoId = 0L;
        this.username = "";
        this.password = "";
        this.expiryCtlInfo = new ExpiryCtlInfo();
        this.name = "";
        this.namePlate = "";
        this.position = new Position();
        this.auditingInfo = new AuditingInfo();
    }

    public BaseStationInfo(long baseStationInfoId, String username, String password, ExpiryCtlInfo expiryCtlInfo, String name, String namePlate, Position position, Position[] range, AuditingInfo auditingInfo)
    {
        this.baseStationInfoId = baseStationInfoId;
        this.username = username;
        this.password = password;
        this.expiryCtlInfo = expiryCtlInfo;
        this.name = name;
        this.namePlate = namePlate;
        this.position = position;
        this.range = range;
        this.auditingInfo = auditingInfo;
    }

    public boolean equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        BaseStationInfo r = null;
        if(rhs instanceof BaseStationInfo)
        {
            r = (BaseStationInfo)rhs;
        }

        if(r != null)
        {
            if(this.baseStationInfoId != r.baseStationInfoId)
            {
                return false;
            }
            if(this.username != r.username)
            {
                if(this.username == null || r.username == null || !this.username.equals(r.username))
                {
                    return false;
                }
            }
            if(this.password != r.password)
            {
                if(this.password == null || r.password == null || !this.password.equals(r.password))
                {
                    return false;
                }
            }
            if(this.expiryCtlInfo != r.expiryCtlInfo)
            {
                if(this.expiryCtlInfo == null || r.expiryCtlInfo == null || !this.expiryCtlInfo.equals(r.expiryCtlInfo))
                {
                    return false;
                }
            }
            if(this.name != r.name)
            {
                if(this.name == null || r.name == null || !this.name.equals(r.name))
                {
                    return false;
                }
            }
            if(this.namePlate != r.namePlate)
            {
                if(this.namePlate == null || r.namePlate == null || !this.namePlate.equals(r.namePlate))
                {
                    return false;
                }
            }
            if(this.position != r.position)
            {
                if(this.position == null || r.position == null || !this.position.equals(r.position))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(this.range, r.range))
            {
                return false;
            }
            if(this.auditingInfo != r.auditingInfo)
            {
                if(this.auditingInfo == null || r.auditingInfo == null || !this.auditingInfo.equals(r.auditingInfo))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::teee::BaseStationInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, baseStationInfoId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, username);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, password);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, expiryCtlInfo);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, name);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, namePlate);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, position);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, range);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, auditingInfo);
        return h_;
    }

    public BaseStationInfo clone()
    {
        BaseStationInfo c = null;
        try
        {
            c = (BaseStationInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeLong(this.baseStationInfoId);
        ostr.writeString(this.username);
        ostr.writeString(this.password);
        ExpiryCtlInfo.ice_write(ostr, this.expiryCtlInfo);
        ostr.writeString(this.name);
        ostr.writeString(this.namePlate);
        Position.ice_write(ostr, this.position);
        PositionArrayHelper.write(ostr, this.range);
        AuditingInfo.ice_write(ostr, this.auditingInfo);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.baseStationInfoId = istr.readLong();
        this.username = istr.readString();
        this.password = istr.readString();
        this.expiryCtlInfo = ExpiryCtlInfo.ice_read(istr);
        this.name = istr.readString();
        this.namePlate = istr.readString();
        this.position = Position.ice_read(istr);
        this.range = PositionArrayHelper.read(istr);
        this.auditingInfo = AuditingInfo.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, BaseStationInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public BaseStationInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        BaseStationInfo v = new BaseStationInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<BaseStationInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, BaseStationInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<BaseStationInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(BaseStationInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final BaseStationInfo _nullMarshalValue = new BaseStationInfo();

    public static final long serialVersionUID = -348770518L;
}
