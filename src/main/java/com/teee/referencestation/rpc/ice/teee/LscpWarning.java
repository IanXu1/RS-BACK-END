// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.1
//
// <auto-generated>
//
// Generated from file `TEEELscpProtocal.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.teee.referencestation.rpc.ice.teee;

public class LscpWarning implements Cloneable,
                                    java.io.Serializable
{
    public boolean isClr;

    public boolean getIsClr()
    {
        return isClr;
    }

    public void setIsClr(boolean isClr)
    {
        this.isClr = isClr;
    }

    public boolean isIsClr()
    {
        return isClr;
    }

    public LscpUniqSNo clrLscpUniqSNo;

    public LscpUniqSNo getClrLscpUniqSNo()
    {
        return clrLscpUniqSNo;
    }

    public void setClrLscpUniqSNo(LscpUniqSNo clrLscpUniqSNo)
    {
        this.clrLscpUniqSNo = clrLscpUniqSNo;
    }

    public LscpUniqSNo lscpUniqSNo;

    public LscpUniqSNo getLscpUniqSNo()
    {
        return lscpUniqSNo;
    }

    public void setLscpUniqSNo(LscpUniqSNo lscpUniqSNo)
    {
        this.lscpUniqSNo = lscpUniqSNo;
    }

    public LscpWarningInfo lscpWarningInfo;

    public LscpWarningInfo getLscpWarningInfo()
    {
        return lscpWarningInfo;
    }

    public void setLscpWarningInfo(LscpWarningInfo lscpWarningInfo)
    {
        this.lscpWarningInfo = lscpWarningInfo;
    }

    public LscpWarning()
    {
        this.isClr = false;
        this.clrLscpUniqSNo = new LscpUniqSNo();
        this.lscpUniqSNo = new LscpUniqSNo();
        this.lscpWarningInfo = new LscpWarningInfo();
    }

    public LscpWarning(boolean isClr, LscpUniqSNo clrLscpUniqSNo, LscpUniqSNo lscpUniqSNo, LscpWarningInfo lscpWarningInfo)
    {
        this.isClr = isClr;
        this.clrLscpUniqSNo = clrLscpUniqSNo;
        this.lscpUniqSNo = lscpUniqSNo;
        this.lscpWarningInfo = lscpWarningInfo;
    }

    public boolean equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LscpWarning r = null;
        if(rhs instanceof LscpWarning)
        {
            r = (LscpWarning)rhs;
        }

        if(r != null)
        {
            if(this.isClr != r.isClr)
            {
                return false;
            }
            if(this.clrLscpUniqSNo != r.clrLscpUniqSNo)
            {
                if(this.clrLscpUniqSNo == null || r.clrLscpUniqSNo == null || !this.clrLscpUniqSNo.equals(r.clrLscpUniqSNo))
                {
                    return false;
                }
            }
            if(this.lscpUniqSNo != r.lscpUniqSNo)
            {
                if(this.lscpUniqSNo == null || r.lscpUniqSNo == null || !this.lscpUniqSNo.equals(r.lscpUniqSNo))
                {
                    return false;
                }
            }
            if(this.lscpWarningInfo != r.lscpWarningInfo)
            {
                if(this.lscpWarningInfo == null || r.lscpWarningInfo == null || !this.lscpWarningInfo.equals(r.lscpWarningInfo))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::teee::LscpWarning");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isClr);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, clrLscpUniqSNo);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, lscpUniqSNo);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, lscpWarningInfo);
        return h_;
    }

    public LscpWarning clone()
    {
        LscpWarning c = null;
        try
        {
            c = (LscpWarning)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeBool(this.isClr);
        LscpUniqSNo.ice_write(ostr, this.clrLscpUniqSNo);
        LscpUniqSNo.ice_write(ostr, this.lscpUniqSNo);
        LscpWarningInfo.ice_write(ostr, this.lscpWarningInfo);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.isClr = istr.readBool();
        this.clrLscpUniqSNo = LscpUniqSNo.ice_read(istr);
        this.lscpUniqSNo = LscpUniqSNo.ice_read(istr);
        this.lscpWarningInfo = LscpWarningInfo.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, LscpWarning v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public LscpWarning ice_read(com.zeroc.Ice.InputStream istr)
    {
        LscpWarning v = new LscpWarning();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<LscpWarning> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, LscpWarning v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<LscpWarning> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(LscpWarning.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final LscpWarning _nullMarshalValue = new LscpWarning();

    public static final long serialVersionUID = 371217582L;
}
